<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: containers | No Such Thing as Two]]></title>
  <link href="http://nwallace.github.io/blog/categories/containers/atom.xml" rel="self"/>
  <link href="http://nwallace.github.io/"/>
  <updated>2015-03-31T22:24:14-04:00</updated>
  <id>http://nwallace.github.io/</id>
  <author>
    <name><![CDATA[Nathan Wallace]]></name>
    <email><![CDATA[nathan@nosuchthingastwo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Aw snap! Ubuntu Core]]></title>
    <link href="http://nwallace.github.io/blog/2015/01/28/aw-snap-ubuntu-core/"/>
    <updated>2015-01-28T00:00:00-05:00</updated>
    <id>http://nwallace.github.io/blog/2015/01/28/aw-snap-ubuntu-core</id>
    <content type="html"><![CDATA[<p>Docker! DevOps! Containerization! Buzz words! Containerization is sweeping the
community like thick-rimmed glasses and JavaScript transpilers. Since I don&#39;t
want the cool kids to realize I&#39;m a hipster-imposter, I figured I&#39;d better get
ahead of this trend while it&#39;s still cool.</p>

<p>But where to start?</p>

<h2>Ubuntu Core</h2>

<p>I probably should start learning the basics of Docker first, but Ubuntu just
released a new spin they&#39;re calling Core. Ubuntu Core, like
<a href="https://coreos.com/">CoreOS</a> and <a href="http://www.projectatomic.io/">Project
Atomic</a>, is a Linux distribution optimized for
running app containers. I chose to try out Ubuntu Core because I just read
<a href="http://0pointer.net/blog/revisiting-how-we-put-together-linux-systems.html">Lennart Pottering&#39;s blog post about OS
design</a>
and heard from <del>some rando on Hacker News</del> a reputable source that
Ubuntu Core is an early take on that philosophy. It&#39;s got all kinds of
goodness, including transactional updates, systemd and container runtime
agnosticism (I have a lot of issues with Docker, and much prefer the promise of
something like <a href="https://coreos.com/blog/rocket/">Rocket</a>).</p>

<h2>Getting Down and Dirty</h2>

<p>To try it out, download the OVA image from <a href="http://www.ubuntu.com/cloud/tools/snappy#snappy-ova">this
page</a> and open it with
<a href="https://www.virtualbox.org/">VirtualBox</a> (login and password both <code>ubuntu</code>).
There&#39;s a <a href="http://developer.ubuntu.com/en/snappy/#tour">quick overview of Ubuntu
Core</a> on Ubuntu&#39;s developer site
that walks you through an introduction to <code>snappy</code>, the tool for managing your
containers.</p>

<p>The guide explains how to install app containers with Docker. There&#39;s an example
app for displaying <a href="http://xkcd.com/">xkcd</a> comics. You can install it with:</p>

<p><code>$ sudo snappy install xkcd-webserver</code></p>

<p>The part the guide left out was what the heck that command does! As described
<a href="http://developer.ubuntu.com/en/snappy/#snap-developers">here</a>, Ubuntu Core
installs app files in <code>/apps/&lt;package&gt;/&lt;version&gt;</code>, then symlinks
<code>/apps/&lt;package&gt;/current</code> to the new version (just like Capistrano).</p>

<div class="no-line-numbers">
```
$ ls -l /apps/xkcd-webserver/current
  => lrwxrwxrwx 1 clickpkg clickpkg 5 Jan 28 22:01 /apps/xkcd-webserver/current -> 0.3.1
$ find /apps/xkcd-webserver -type d
  => /apps/xkcd-webserver
     /apps/xkcd-webserver/0.3.1
     /apps/xkcd-webserver/0.3.1/.click
     /apps/xkcd-webserver/0.3.1/.click/triggers
     /apps/xkcd-webserver/0.3.1/.click/updates
     /apps/xkcd-webserver/0.3.1/.click/info
     /apps/xkcd-webserver/0.3.1/www
     /apps/xkcd-webserver/0.3.1/meta
     /apps/xkcd-webserver/0.3.1/bin
```
</div>

<p>Ubuntu Core installs app binaries to <code>/apps/&lt;package&gt;/&lt;version&gt;/bin</code>. If we look
inside the <code>bin</code> directory for our xkcd app, we&#39;ll find the python script that
boots up the webserver:</p>

<div class="no-line-numbers">
```
$ less /apps/xkcd-webserver/current/bin/xkcd-webserver
  => !#/usr/bin/python3
     ...
```
</div>

<p>In fact, the OS has already started the app for us:</p>

<div class="no-line-numbers">
```
$ ps aux | grep xkcd
  => root ... /usr/bin/python3 /apps/xkcd-webserver/0.3.1/bin/xkcd-webserver
```
</div>

<p>To see the app running, set up a port forwarding rule with VirtualBox so you
can navigate to port 80 on the virtual machine. From the VirtualBox VM Manager,
click your Ubuntu Core VM on the left and choose &quot;Settings&quot;. Under &quot;Network&quot; &gt;
&quot;Port Forwarding&quot;, click the plus sign to add a new rule to forward a Host
port (I chose 8080) to port 80 on the Guest. Then navigate to localhost:8080 in
your browser to see the app in all its glory.</p>

<p>Congratulations! You&#39;re running Docker apps on Ubuntu Core! Just be careful not
to tell your boss at work, unless you&#39;re ready to become &quot;the DevOps gal/guy&quot; ;)</p>
]]></content>
  </entry>
  
</feed>
