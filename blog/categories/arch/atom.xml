<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: arch | No Such Thing as Two]]></title>
  <link href="http://nwallace.github.io/blog/categories/arch/atom.xml" rel="self"/>
  <link href="http://nwallace.github.io/"/>
  <updated>2015-03-31T22:45:48-04:00</updated>
  <id>http://nwallace.github.io/</id>
  <author>
    <name><![CDATA[Nathan Wallace]]></name>
    <email><![CDATA[nathan@nosuchthingastwo.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fixing Ruby 2.1.1 on Arch]]></title>
    <link href="http://nwallace.github.io/blog/2014/04/11/fixing-ruby-2-1-1-on-arch/"/>
    <updated>2014-04-11T00:00:00-04:00</updated>
    <id>http://nwallace.github.io/blog/2014/04/11/fixing-ruby-2-1-1-on-arch</id>
    <content type="html"><![CDATA[<p>I recently tried to install Ruby 2.1.1 on my <a href="http://www.archlinux.org">Arch</a>
box with <a href="https://github.com/postmodern/ruby-install"><code>ruby-install</code></a>.
Unfortunately, <a href="https://www.ruby-forum.com/topic/4486950">there&#39;s a bug</a> on Arch
Linux in the current stable build (2.1.1p76).</p>

<div class="no-line-numbers">
```
$ ruby-install ruby 2.1.1
  ...
  make[2]: Entering directory '~/src/ruby-2.1.1/ext/readline'
  compiling readline.c
  readline.c: In function ‘Init_readline’:
  readline.c:1977:26: error: ‘Function’ undeclared (first use in this function)
       rl_pre_input_hook = (Function *)readline_pre_input_hook;
                            ^
  readline.c:1977:26: note: each undeclared identifier is reported only once for each function it appears in
  readline.c:1977:36: error: expected expression before ‘)’ token
       rl_pre_input_hook = (Function *)readline_pre_input_hook;
                                      ^
  readline.c: At top level:
  readline.c:634:1: warning: ‘readline_pre_input_hook’ defined but not used [-Wunused-function]
   readline_pre_input_hook(void)
   ^
  Makefile:228: recipe for target 'readline.o' failed
  make[2]: *** [readline.o] Error 1
  make[2]: Leaving directory '~/src/ruby-2.1.1/ext/readline'
  exts.mk:198: recipe for target 'ext/readline/all' failed
  make[1]: *** [ext/readline/all] Error 2
  make[1]: Leaving directory '~/src/ruby-2.1.1'
  uncommon.mk:180: recipe for target 'build-ext' failed
  make: *** [build-ext] Error 2
  !!! Compiling ruby 2.1.1 failed!
```
</div>

<p>The bug is fixed in trunk, but the fix has not yet been released. Of course, if
you have a system Ruby installed on Arch, you&#39;ll see that it&#39;s version is 2.1.1.
So how did the Arch package manage to compile 2.1.1 in spite of this bug?</p>

<p>The Arch team makes it easy to find the answer to this question. We can view the
package from the Arch repos and see what patches they have applied. Start off by
going to the package page for your architecture. For me, that&#39;s
<a href="https://www.archlinux.org/packages/extra/x86_64/ruby/">here</a>. On the right side
of the page, follow the link to view the source files:</p>

<p><img src="/images/posts/2014/04/11/package-actions.png" alt="Source Files"></p>

<p>If there are any updates to the source made by the package maintainers, you will
see patch files for them. In this case, there is one patch file:</p>

<p>```diff 0001-Fix-undeclared-identifier-error-by-using-the-actual-.patch
From 4c4da3fc650a3595ecc06f49072f1ffae07db706 Mon Sep 17 00:00:00 2001
From: Thomas Dziedzic <a href="mailto:gostrc@gmail.com">gostrc@gmail.com</a>
Date: Sat, 1 Mar 2014 21:41:28 -0800
Subject: [PATCH] Fix undeclared identifier error by using the actual type of
 rl<em>pre</em>input_hook</p>

<hr>

<p>ext/readline/readline.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)</p>

<p>diff --git a/ext/readline/readline.c b/ext/readline/readline.c
index 659adb9..7bc0eed 100644
--- a/ext/readline/readline.c
+++ b/ext/readline/readline.c
@@ -1974,7 +1974,7 @@ Init_readline()</p>
<div class="highlight"><pre><code class="text"> rl_attempted_completion_function = readline_attempted_completion_function;
</code></pre></div>
<p>#if defined(HAVE<em>RL</em>PRE<em>INPUT</em>HOOK)
-    rl<em>pre</em>input<em>hook = (Function *)readline</em>pre<em>input</em>hook;
+    rl<em>pre</em>input<em>hook = (rl</em>hook<em>func</em>t *)readline<em>pre</em>input<em>hook;
 #endif
 #ifdef HAVE</em>RL<em>CATCH</em>SIGNALS</p>

<h2>     rl<em>catch</em>signals = 0;</h2>

<p>1.9.0
```</p>

<p>As you can see, this patch fixes the bug we saw when compiling Ruby. We can use
this patch file with <code>ruby-install</code> to fix the bug! There&#39;s just one little fix
to apply: the line numbers in the patch file don&#39;t match the line number from
our compilation error. The compile error reported a problem on line 1977, but
this patch applies the change to line 1974. All we have to do is update the
patch to apply to the correct line. Create a patch file on your computer. Paste
in the patch from the Arch package, and update the line number.  Your file
should look like this:</p>

<p>```diff fix-readline.patch
From 4c4da3fc650a3595ecc06f49072f1ffae07db706 Mon Sep 17 00:00:00 2001
From: Thomas Dziedzic <a href="mailto:gostrc@gmail.com">gostrc@gmail.com</a>
Date: Sat, 1 Mar 2014 21:41:28 -0800
Subject: [PATCH] Fix undeclared identifier error by using the actual type of
 rl<em>pre</em>input_hook</p>

<hr>

<p>ext/readline/readline.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)</p>

<p>diff --git a/ext/readline/readline.c b/ext/readline/readline.c
index 659adb9..7bc0eed 100644
--- a/ext/readline/readline.c
+++ b/ext/readline/readline.c
@@ -1977,7 +1977,7 @@ Init_readline()</p>
<div class="highlight"><pre><code class="text"> rl_attempted_completion_function = readline_attempted_completion_function;
</code></pre></div>
<p>#if defined(HAVE<em>RL</em>PRE<em>INPUT</em>HOOK)
-    rl<em>pre</em>input<em>hook = (Function *)readline</em>pre<em>input</em>hook;
+    rl<em>pre</em>input<em>hook = (rl</em>hook<em>func</em>t *)readline<em>pre</em>input<em>hook;
 #endif
 #ifdef HAVE</em>RL<em>CATCH</em>SIGNALS</p>

<h2>     rl<em>catch</em>signals = 0;</h2>

<p>1.9.0
```</p>

<p>Now, we can finish intalling Ruby 2.1.1! Just tell ruby-install to use the patch
file we just created:</p>

<p><code>$ ruby-install -p path/to/fix-readline.patch ruby 2.1.1</code></p>

<p>The installation should succeed, and you can now use your favorite Ruby version
manager to use Ruby 2.1.1.</p>
]]></content>
  </entry>
  
</feed>
